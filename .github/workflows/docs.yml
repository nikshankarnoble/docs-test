name: Build and Deploy Docs

on:
  push:
    branches:
      - main
    tags:
      - "*"
      
  workflow_dispatch:
  
jobs:
  build:
    permissions:
      contents: write
      pages: write
      
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Build documentation
      run: |
        git fetch --tags
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          VERSION=latest
        else
          VERSION=$(git describe --tags)
        fi
        poetry install
        poetry run make -C docs html
        mkdir -p docs_build
        mv docs/build/html "docs_build/$VERSION"
              
    - name: Deploy to GitHub Pages
      if: success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs_build
        keep_files: true

  mkversions:
    needs: [build]
    permissions:
      contents: write
      pages: write
      
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Write versions to JSON file
      uses: jannekem/run-python-script-action@v1
      with:
        script: |
          import json
          from pathlib import Path

          cwd = Path.cwd()
          versions = sorted((item.name for item in cwd.iterdir()
                             if item.is_dir() and not item.name.startswith('.')),
                            reverse=True)

          target_dir = Path('gh-pages')
          target_dir.mkdir(parents=True)
          
          im_versions = [dict(version=version, title=version, aliases=[])
                         for version in versions]
          immaterial_target_file = target_dir / 'versions.json'
          with immaterial_target_file.open('w') as f:
              json.dump(im_versions, f)
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: gh-pages
        keep_files: true
